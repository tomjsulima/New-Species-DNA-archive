// Returns a random DNA base
const returnRandBase = () => {
  const dnaBases = ['A', 'T', 'C', 'G']
  return dnaBases[Math.floor(Math.random() * 4)] 
}

// Returns a random single stand of DNA containing 15 bases
const mockUpStrand = () => {
  const newStrand = []
  for (let i = 0; i < 15; i++) {
    newStrand.push(returnRandBase())
  }
  return newStrand
}
//mockUpStrand used for DNA array
const pAequorFactory = (specimenNum, dna) => {
  return {
    specimenNum: specimenNum,
    dna: dna,
    mutate() {
      let base = (Math.floor(Math.random() * this.dna.length));
      let randomBase = returnRandBase();
      do {
        randomBase = returnRandBase(); 
      } while(randomBase === this.dna[base]);
      this.dna[base] = randomBase;
      return this.dna;
    },
    compareDNA(otherPAequor) {
      let counter = 0   
      for (let j = 0; j < this.dna.length; j++) 
      {
            if (this.dna[j] === otherPAequor.dna[j]) {
            counter += 1;
            }
      }
      return console.log(`Specimen 1 and Specimen 2 have ${Math.round(counter / this.dna.length * 100)}% DNA in common`);            
    },
  willLikelySurvive(){
       let count = 0;
       for(i=0; i < this.dna.length; i++){
        if(this.dna[i]==='C'||this.dna[i]==='G'){
          count +=1;
        } 
       }
      let percentage = (count/this.dna.length)*100;
      if (percentage.toFixed(2) >= 60){
        return true
      } else {
        return false
      }
  }
}
}

const factoryCreator = () => {
  let newArray = [];
  let count = 1;
  let i = 0;
  do{
  newArray.push(pAequorFactory(count, mockUpStrand()));
  newArray[i].willLikelySurvive();  
  if (newArray[i].willLikelySurvive() === true) {
    count += 1;
    i += 1;  
    } else if (newArray[i].willLikelySurvive() === false){
      newArray.pop();
    }
  } while (i < 30);
  return newArray;
};


//let ex1 = pAequorFactory(1, mockUpStrand());
//let ex1mutate = ex1.mutate();

//console.log(ex1.dna);
//console.log(ex1.mutate());
//console.log(ex1.compareDNA(pAequorFactory(2, mockUpStrand())));
//console.log(ex1.willLikelySurvive());
console.log(factoryCreator());
